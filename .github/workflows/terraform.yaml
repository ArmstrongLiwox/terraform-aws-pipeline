name: Terraform Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment for deployment'
        required: true
        default: 'dev'
        # Add other environment options as desired

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Terraform environment variables
        run: |
          echo "AWS_REGION=${{ env.prod.AWS_REGION }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY=${{ env.prod.AWS_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ env.prod.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "TF_VERSION=${{ env.TF_VERSION || '1.4.0' }}" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

  deploy:
    needs: validate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Terraform environment variables
        run: |
          echo "AWS_REGION=${{ secrets.Prod.AWS_REGION }}" > terraform.env
          echo "AWS_ACCESS_KEY=${{ secrets.Prod.AWS_ACCESS_KEY }}" >> terraform.env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.Prod.AWS_ACCESS_KEY_ID }}" >> terraform.env
          echo "TF_VERSION=${{ env.TF_VERSION || '1.4.0' }}" >> terraform.env
          echo $AWS_ACCESS_KEY

      - name: Export Terraform environment variables
        run: |
          export $(cat terraform.env)
          env | grep AWS

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var-file=environments/${{ github.event.inputs.environment }}/values.tfvars -out=tfplan

      - name: Manual Approval
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: trstringer/manual-approval@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          message: "A Terraform deployment is pending for review on the ${GITHUB_REF} branch. Please review the changes and provide approval to proceed."

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' && github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'
        run: terraform apply tfplan
